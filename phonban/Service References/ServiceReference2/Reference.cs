//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace phonban.ServiceReference2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="phong", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceForInsert")]
    [System.SerializableAttribute()]
    public partial class phong : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SDTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ma {
            get {
                return this.MaField;
            }
            set {
                if ((object.ReferenceEquals(this.MaField, value) != true)) {
                    this.MaField = value;
                    this.RaisePropertyChanged("Ma");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SDT {
            get {
                return this.SDTField;
            }
            set {
                if ((object.ReferenceEquals(this.SDTField, value) != true)) {
                    this.SDTField = value;
                    this.RaisePropertyChanged("SDT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ten {
            get {
                return this.TenField;
            }
            set {
                if ((object.ReferenceEquals(this.TenField, value) != true)) {
                    this.TenField = value;
                    this.RaisePropertyChanged("Ten");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Nhanvien", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceForInsert")]
    [System.SerializableAttribute()]
    public partial class Nhanvien : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnhField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool GioitinhField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NgaysinhField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuequanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Anh {
            get {
                return this.AnhField;
            }
            set {
                if ((object.ReferenceEquals(this.AnhField, value) != true)) {
                    this.AnhField = value;
                    this.RaisePropertyChanged("Anh");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Gioitinh {
            get {
                return this.GioitinhField;
            }
            set {
                if ((this.GioitinhField.Equals(value) != true)) {
                    this.GioitinhField = value;
                    this.RaisePropertyChanged("Gioitinh");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ma {
            get {
                return this.MaField;
            }
            set {
                if ((object.ReferenceEquals(this.MaField, value) != true)) {
                    this.MaField = value;
                    this.RaisePropertyChanged("Ma");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Ngaysinh {
            get {
                return this.NgaysinhField;
            }
            set {
                if ((this.NgaysinhField.Equals(value) != true)) {
                    this.NgaysinhField = value;
                    this.RaisePropertyChanged("Ngaysinh");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Quequan {
            get {
                return this.QuequanField;
            }
            set {
                if ((object.ReferenceEquals(this.QuequanField, value) != true)) {
                    this.QuequanField = value;
                    this.RaisePropertyChanged("Quequan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ten {
            get {
                return this.TenField;
            }
            set {
                if ((object.ReferenceEquals(this.TenField, value) != true)) {
                    this.TenField = value;
                    this.RaisePropertyChanged("Ten");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertUserDetails", ReplyAction="http://tempuri.org/IService1/InsertUserDetailsResponse")]
        string InsertUserDetails(phonban.ServiceReference2.phong useInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertUserDetails", ReplyAction="http://tempuri.org/IService1/InsertUserDetailsResponse")]
        System.Threading.Tasks.Task<string> InsertUserDetailsAsync(phonban.ServiceReference2.phong useInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectUserDetails", ReplyAction="http://tempuri.org/IService1/SelectUserDetailsResponse")]
        System.Data.DataSet SelectUserDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectUserDetails", ReplyAction="http://tempuri.org/IService1/SelectUserDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SelectUserDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUserDetails", ReplyAction="http://tempuri.org/IService1/DeleteUserDetailsResponse")]
        bool DeleteUserDetails(phonban.ServiceReference2.phong useInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUserDetails", ReplyAction="http://tempuri.org/IService1/DeleteUserDetailsResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserDetailsAsync(phonban.ServiceReference2.phong useInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Updatephongban", ReplyAction="http://tempuri.org/IService1/UpdatephongbanResponse")]
        void Updatephongban(phonban.ServiceReference2.phong useInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Updatephongban", ReplyAction="http://tempuri.org/IService1/UpdatephongbanResponse")]
        System.Threading.Tasks.Task UpdatephongbanAsync(phonban.ServiceReference2.phong useInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertNhanvien", ReplyAction="http://tempuri.org/IService1/InsertNhanvienResponse")]
        string InsertNhanvien(phonban.ServiceReference2.Nhanvien useInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertNhanvien", ReplyAction="http://tempuri.org/IService1/InsertNhanvienResponse")]
        System.Threading.Tasks.Task<string> InsertNhanvienAsync(phonban.ServiceReference2.Nhanvien useInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoadNhanvien", ReplyAction="http://tempuri.org/IService1/LoadNhanvienResponse")]
        System.Data.DataSet LoadNhanvien();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoadNhanvien", ReplyAction="http://tempuri.org/IService1/LoadNhanvienResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> LoadNhanvienAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteNhanvien", ReplyAction="http://tempuri.org/IService1/DeleteNhanvienResponse")]
        bool DeleteNhanvien(phonban.ServiceReference2.Nhanvien useInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteNhanvien", ReplyAction="http://tempuri.org/IService1/DeleteNhanvienResponse")]
        System.Threading.Tasks.Task<bool> DeleteNhanvienAsync(phonban.ServiceReference2.Nhanvien useInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateNhanvien", ReplyAction="http://tempuri.org/IService1/UpdateNhanvienResponse")]
        void UpdateNhanvien(phonban.ServiceReference2.Nhanvien useInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateNhanvien", ReplyAction="http://tempuri.org/IService1/UpdateNhanvienResponse")]
        System.Threading.Tasks.Task UpdateNhanvienAsync(phonban.ServiceReference2.Nhanvien useInfo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : phonban.ServiceReference2.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<phonban.ServiceReference2.IService1>, phonban.ServiceReference2.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string InsertUserDetails(phonban.ServiceReference2.phong useInfo) {
            return base.Channel.InsertUserDetails(useInfo);
        }
        
        public System.Threading.Tasks.Task<string> InsertUserDetailsAsync(phonban.ServiceReference2.phong useInfo) {
            return base.Channel.InsertUserDetailsAsync(useInfo);
        }
        
        public System.Data.DataSet SelectUserDetails() {
            return base.Channel.SelectUserDetails();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SelectUserDetailsAsync() {
            return base.Channel.SelectUserDetailsAsync();
        }
        
        public bool DeleteUserDetails(phonban.ServiceReference2.phong useInfo) {
            return base.Channel.DeleteUserDetails(useInfo);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserDetailsAsync(phonban.ServiceReference2.phong useInfo) {
            return base.Channel.DeleteUserDetailsAsync(useInfo);
        }
        
        public void Updatephongban(phonban.ServiceReference2.phong useInfo) {
            base.Channel.Updatephongban(useInfo);
        }
        
        public System.Threading.Tasks.Task UpdatephongbanAsync(phonban.ServiceReference2.phong useInfo) {
            return base.Channel.UpdatephongbanAsync(useInfo);
        }
        
        public string InsertNhanvien(phonban.ServiceReference2.Nhanvien useInfo) {
            return base.Channel.InsertNhanvien(useInfo);
        }
        
        public System.Threading.Tasks.Task<string> InsertNhanvienAsync(phonban.ServiceReference2.Nhanvien useInfo) {
            return base.Channel.InsertNhanvienAsync(useInfo);
        }
        
        public System.Data.DataSet LoadNhanvien() {
            return base.Channel.LoadNhanvien();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LoadNhanvienAsync() {
            return base.Channel.LoadNhanvienAsync();
        }
        
        public bool DeleteNhanvien(phonban.ServiceReference2.Nhanvien useInfo) {
            return base.Channel.DeleteNhanvien(useInfo);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteNhanvienAsync(phonban.ServiceReference2.Nhanvien useInfo) {
            return base.Channel.DeleteNhanvienAsync(useInfo);
        }
        
        public void UpdateNhanvien(phonban.ServiceReference2.Nhanvien useInfo) {
            base.Channel.UpdateNhanvien(useInfo);
        }
        
        public System.Threading.Tasks.Task UpdateNhanvienAsync(phonban.ServiceReference2.Nhanvien useInfo) {
            return base.Channel.UpdateNhanvienAsync(useInfo);
        }
    }
}
